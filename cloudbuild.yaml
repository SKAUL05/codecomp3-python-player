steps:
#Enable Services
- id : 'Enable Services'
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
     gcloud services enable cloudresourcemanager.googleapis.com
     gcloud services enable serviceusage.googleapis.com
     CLOUDBUILD_SA="$(gcloud projects describe $PROJECT_ID \
     --format 'value(projectNumber)')@cloudbuild.gserviceaccount.com"
     gcloud projects add-iam-policy-binding $PROJECT_ID \
     --member serviceAccount:$CLOUDBUILD_SA --role roles/editor

#Build image
- id : 'Build Image'
  name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/codecomp3-python-player', '.']
  
#Push image
- id : 'Push Image'
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/codecomp3-python-player']
  
- id : ' Check & Create Bucket for Terraform'
  name: 'gcr.io/cloud-builders/gsutil'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
      PROJECT_ID=$(gcloud config get-value project)
      gsutil ls gs://${PROJECT_ID}-tf-infra || (gsutil mb gs://${PROJECT_ID}-tf-infra && gsutil versioning set on gs://${PROJECT_ID}-tf-infra)

#Terraform Init
- id: 'Terraform Commands'
  name: 'hashicorp/terraform:light'
  entrypoint: 'sh'
  args: 
  - '-c'
  - |
      echo "*************** TERRAFORM INIT ******************"
      echo "*************************************************" 
      cd src_tf/
      terraform init
      terraform plan
      terraform apply -auto-approve


#Check & Create App Engine
- id : 'Check & Create App Engine'
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'sh'
  args:
  - '-c'
  - |
       gcloud app create --region="us-central" || echo "App Already Present"
       

#Deploy image
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['app', 'deploy', "--image-url=gcr.io/${PROJECT_ID}/codecomp3-python-player"]
  timeout: '1600s'
images:
- gcr.io/$PROJECT_ID/codecomp3-python-player